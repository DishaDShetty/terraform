name: Terraform with synk

on:
  push:
    branches:    
      - '**'        # matches every branch
  pull_request:
    branches:
      - main

jobs:

 synk: 
  # permissions are needed or else writing will fail
    permissions:
          contents: read # for actions/checkout to fetch code
          security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
          actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status

    name: Infrastructure Deploy
    runs-on: ubuntu-latest
    env:
      TF_WORKSPACE: main
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}


    steps:
      - uses: actions/checkout@v3
      - name: Set up Snyk CLI to check for security issues
        # Snyk can be used to break the build when it detects security issues.
        # In this case we want to upload the SAST issues to GitHub Code Scanning
        uses: snyk/actions/setup@806182742461562b67788a64410098c9d9b96adb

        # Runs Snyk Infrastructure as Code (IaC) analysis and uploads result to Snyk.
        # Use || true to not fail the pipeline.
      - name: Snyk IaC test and report
        run: snyk iac test --report --sarif-file-output=snyk-code.sarif || true


      - name: check the contents .sarif file
        run: cat snyk-code.sarif 

      - name: Upload sarif file to Github Code Scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk-code.sarif

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
